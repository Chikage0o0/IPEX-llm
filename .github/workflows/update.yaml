name: Update Dockerfile VERSION

on:
    schedule:
        - cron: '0 0 * * *' # 每天运行一次，可以根据需要调整时间
    workflow_dispatch:
    push:
        branches:
            - main

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    update-version:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.x'

            - name: Install requests
              run: pip install requests

            - name: Fetch latest tag
              id: latest-tag
              run: python .github/scripts/get_latest_version.py intelanalytics/ipex-llm-inference-cpp-xpu

            - name: Update Dockerfile
              if: steps.latest-tag.outputs.tag
              run: |
                  tag="${{ steps.latest-tag.outputs.tag }}"
                  sed -i "s/# Update: *.*$/# Update: $tag/" Dockerfile

            - name: Check for changes
              id: check-changes
              run: |
                  if git diff --exit-code Dockerfile; then
                    echo "No changes in Dockerfile."
                    echo "skip_commit=true" >> $GITHUB_OUTPUT
                  else
                    echo "Changes detected in Dockerfile."
                    echo "skip_commit=false" >> $GITHUB_OUTPUT
                  fi

            - name: Commit and push changes
              if: steps.latest-tag.outputs.tag && steps.check-changes.outputs.skip_commit == 'false'
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add Dockerfile
                  git commit -m "Update Dockerfile VERSION to ${{ steps.latest-tag.outputs.tag }}"
                  git push
        outputs:
            skip_commit: ${{ steps.check-changes.outputs.skip_commit }}

    build-and-push-image:
        needs: update-version
        if: needs.update-version.outputs.skip_commit == 'false'
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Initialization environment
              env:
                  DEBIAN_FRONTEND: noninteractive
              run: |
                  docker rmi `docker images -q`
                  sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /etc/mysql /etc/php
                  sudo -E apt-get -y purge azure-cli* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
                  sudo -E apt-get -qq update
                  sudo -E apt-get -qq install libfuse-dev $(curl -fsSL git.io/depends-ubuntu-2204)
                  sudo -E apt-get -qq autoremove --purge
                  sudo -E apt-get -qq clean
                  sudo timedatectl set-timezone "$TZ"

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Update Repository
              run: |
                  git pull

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
